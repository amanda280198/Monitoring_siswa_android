// Generated by view binder compiler. Do not edit!
package com.example.testingskripsinew.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.Guideline;
import androidx.viewbinding.ViewBinding;
import com.example.testingskripsinew.R;
import com.google.android.material.card.MaterialCardView;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemUserBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final Guideline guideline12;

  @NonNull
  public final CircleImageView imageView;

  @NonNull
  public final TextView kelas;

  @NonNull
  public final TextView namaLengkap;

  @NonNull
  public final TextView pengajar1;

  @NonNull
  public final TextView pengajar2;

  @NonNull
  public final TextView txtKelas;

  @NonNull
  public final TextView txtP1;

  @NonNull
  public final TextView txtP2;

  private ItemUserBinding(@NonNull MaterialCardView rootView, @NonNull Guideline guideline12,
      @NonNull CircleImageView imageView, @NonNull TextView kelas, @NonNull TextView namaLengkap,
      @NonNull TextView pengajar1, @NonNull TextView pengajar2, @NonNull TextView txtKelas,
      @NonNull TextView txtP1, @NonNull TextView txtP2) {
    this.rootView = rootView;
    this.guideline12 = guideline12;
    this.imageView = imageView;
    this.kelas = kelas;
    this.namaLengkap = namaLengkap;
    this.pengajar1 = pengajar1;
    this.pengajar2 = pengajar2;
    this.txtKelas = txtKelas;
    this.txtP1 = txtP1;
    this.txtP2 = txtP2;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemUserBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemUserBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_user, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemUserBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.guideline12;
      Guideline guideline12 = rootView.findViewById(id);
      if (guideline12 == null) {
        break missingId;
      }

      id = R.id.imageView;
      CircleImageView imageView = rootView.findViewById(id);
      if (imageView == null) {
        break missingId;
      }

      id = R.id.kelas;
      TextView kelas = rootView.findViewById(id);
      if (kelas == null) {
        break missingId;
      }

      id = R.id.namaLengkap;
      TextView namaLengkap = rootView.findViewById(id);
      if (namaLengkap == null) {
        break missingId;
      }

      id = R.id.pengajar1;
      TextView pengajar1 = rootView.findViewById(id);
      if (pengajar1 == null) {
        break missingId;
      }

      id = R.id.pengajar2;
      TextView pengajar2 = rootView.findViewById(id);
      if (pengajar2 == null) {
        break missingId;
      }

      id = R.id.txtKelas;
      TextView txtKelas = rootView.findViewById(id);
      if (txtKelas == null) {
        break missingId;
      }

      id = R.id.txtP1;
      TextView txtP1 = rootView.findViewById(id);
      if (txtP1 == null) {
        break missingId;
      }

      id = R.id.txtP2;
      TextView txtP2 = rootView.findViewById(id);
      if (txtP2 == null) {
        break missingId;
      }

      return new ItemUserBinding((MaterialCardView) rootView, guideline12, imageView, kelas,
          namaLengkap, pengajar1, pengajar2, txtKelas, txtP1, txtP2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
