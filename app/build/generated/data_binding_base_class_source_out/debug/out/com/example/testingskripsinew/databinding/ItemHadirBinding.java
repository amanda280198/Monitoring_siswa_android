// Generated by view binder compiler. Do not edit!
package com.example.testingskripsinew.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.Guideline;
import androidx.viewbinding.ViewBinding;
import com.example.testingskripsinew.R;
import com.github.angads25.toggle.widget.LabeledSwitch;
import com.google.android.material.card.MaterialCardView;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemHadirBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final Guideline guideline1;

  @NonNull
  public final Guideline guideline2;

  @NonNull
  public final Guideline guideline3;

  @NonNull
  public final Guideline guideline6;

  @NonNull
  public final Guideline guideline7;

  @NonNull
  public final CircleImageView imageView;

  @NonNull
  public final TextView jamKeluar;

  @NonNull
  public final TextView jamMasuk;

  @NonNull
  public final TextView namaMhs;

  @NonNull
  public final TextView statusGeo;

  @NonNull
  public final LabeledSwitch switchIzin;

  @NonNull
  public final TextView tvCekin;

  @NonNull
  public final TextView tvCekout;

  @NonNull
  public final TextView txtNpm;

  private ItemHadirBinding(@NonNull MaterialCardView rootView, @NonNull Guideline guideline1,
      @NonNull Guideline guideline2, @NonNull Guideline guideline3, @NonNull Guideline guideline6,
      @NonNull Guideline guideline7, @NonNull CircleImageView imageView,
      @NonNull TextView jamKeluar, @NonNull TextView jamMasuk, @NonNull TextView namaMhs,
      @NonNull TextView statusGeo, @NonNull LabeledSwitch switchIzin, @NonNull TextView tvCekin,
      @NonNull TextView tvCekout, @NonNull TextView txtNpm) {
    this.rootView = rootView;
    this.guideline1 = guideline1;
    this.guideline2 = guideline2;
    this.guideline3 = guideline3;
    this.guideline6 = guideline6;
    this.guideline7 = guideline7;
    this.imageView = imageView;
    this.jamKeluar = jamKeluar;
    this.jamMasuk = jamMasuk;
    this.namaMhs = namaMhs;
    this.statusGeo = statusGeo;
    this.switchIzin = switchIzin;
    this.tvCekin = tvCekin;
    this.tvCekout = tvCekout;
    this.txtNpm = txtNpm;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemHadirBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemHadirBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_hadir, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemHadirBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.guideline1;
      Guideline guideline1 = rootView.findViewById(id);
      if (guideline1 == null) {
        break missingId;
      }

      id = R.id.guideline2;
      Guideline guideline2 = rootView.findViewById(id);
      if (guideline2 == null) {
        break missingId;
      }

      id = R.id.guideline3;
      Guideline guideline3 = rootView.findViewById(id);
      if (guideline3 == null) {
        break missingId;
      }

      id = R.id.guideline6;
      Guideline guideline6 = rootView.findViewById(id);
      if (guideline6 == null) {
        break missingId;
      }

      id = R.id.guideline7;
      Guideline guideline7 = rootView.findViewById(id);
      if (guideline7 == null) {
        break missingId;
      }

      id = R.id.imageView;
      CircleImageView imageView = rootView.findViewById(id);
      if (imageView == null) {
        break missingId;
      }

      id = R.id.jam_keluar;
      TextView jamKeluar = rootView.findViewById(id);
      if (jamKeluar == null) {
        break missingId;
      }

      id = R.id.jam_masuk;
      TextView jamMasuk = rootView.findViewById(id);
      if (jamMasuk == null) {
        break missingId;
      }

      id = R.id.nama_mhs;
      TextView namaMhs = rootView.findViewById(id);
      if (namaMhs == null) {
        break missingId;
      }

      id = R.id.status_geo;
      TextView statusGeo = rootView.findViewById(id);
      if (statusGeo == null) {
        break missingId;
      }

      id = R.id.switch_izin;
      LabeledSwitch switchIzin = rootView.findViewById(id);
      if (switchIzin == null) {
        break missingId;
      }

      id = R.id.tv_cekin;
      TextView tvCekin = rootView.findViewById(id);
      if (tvCekin == null) {
        break missingId;
      }

      id = R.id.tv_cekout;
      TextView tvCekout = rootView.findViewById(id);
      if (tvCekout == null) {
        break missingId;
      }

      id = R.id.txt_npm;
      TextView txtNpm = rootView.findViewById(id);
      if (txtNpm == null) {
        break missingId;
      }

      return new ItemHadirBinding((MaterialCardView) rootView, guideline1, guideline2, guideline3,
          guideline6, guideline7, imageView, jamKeluar, jamMasuk, namaMhs, statusGeo, switchIzin,
          tvCekin, tvCekout, txtNpm);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
